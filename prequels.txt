This project is a backend application, which is totally user based. Using this application user can search a product, see a product. Users can signup and login, authentication is managed using JWT Authentication. After that , users can add their products in cart, list their cart, can perform removal of the same. Along with this they can store their address, edit it time to time, and can remove it when needed to.
For payment their is checkout where all the details will be validated and this will be followed by a checkout.

In this project, I have used some famous packages that are available around the GOlang, namely Gin, for connection, MongoDB for database. And in this project the MongoDB will be running under the docker enviroment.

The folder have been structured into categories like:
1) Controllers, which is responsible for controlling all the ongoing operation, or has the set of instructions that the APIs will be following

2) Database: This folder has everything related to the databases, from the connection to the creation of instances

3) Models: We have the structure for every entity that we will be using inside this project, like Users, Orders, Payment, Addresses etc

4) Routes: In this folder we would be assigining the routes or we would be exposing the endpoint through which we would be communication will be done

5) Tokens: In this one, we would be primarly working with Authentication, from the User Signup, Login and creation of Token etc.


--------------------------------------
I have adopted the bottom-top approach for developing this application, so I have worked on my routes first, in which 
There are seperate functions, that would be exposing seperate functionalities. So we have userRoutes that is responsible for all the user operation that we will be performing.
Similarily, we have Orders, and all other functions, from which we will be having communication. This particular workspace has every API that we would be using in order to perform all the operations that we will be needed. Along with this, if we need to further scale up the application we can also modify it, according to the requirements.
------------------------------------------
Going up towards the models, 
I have defined them in a single file, in order to maintain the simplicity of codes. So, I have created different models for every aspect that we basically need in ecom. We have a user here who will have all the basic details along with their Tokens, and cart status.
Then we have products, with their definition as the ID, Name and related details
